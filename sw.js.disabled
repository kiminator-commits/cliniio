// Basic service worker for offline functionality
const CACHE_NAME = 'cliniio-v1';

// Install event - cache basic resources
self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => {
      return cache.addAll([
        '/',
        '/index.html',
        // Add other critical resources here
      ]);
    })
  );
});

// Fetch event - serve from cache if available
self.addEventListener('fetch', event => {
  // Skip caching for Supabase API calls and let them go directly to network
  if (event.request.url.includes('supabase.co')) {
    event.respondWith(
      fetch(event.request).catch(error => {
        console.log('Service worker: Supabase request failed:', error);
        throw error;
      })
    );
    return;
  }

  event.respondWith(
    caches.match(event.request).then(response => {
      // Return cached version or fetch from network
      return response || fetch(event.request);
    })
  );
});

// Activate event - clean up old caches
self.addEventListener('activate', event => {
  event.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames.map(cacheName => {
          if (cacheName !== CACHE_NAME) {
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});
