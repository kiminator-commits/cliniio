import{W as y,N as l}from"./login-C1ujRpW7.js";import"./utils-DSBVV_PW.js";import"./vendor-DoALFvsH.js";import"./data-73RVSc-N.js";import"./ui-DETUEJ2B.js";var v=(s,t,e)=>new Promise((n,c)=>{var m=i=>{try{r(e.next(i))}catch(a){c(a)}},u=i=>{try{r(e.throw(i))}catch(a){c(a)}},r=i=>i.done?n(i.value):Promise.resolve(i.value).then(m,u);r((e=e.apply(s,t)).next())});class o{static getInstance(){return v(this,null,function*(){return this.instance?this.instance:this.initializationPromise?this.initializationPromise:(this.initializationPromise=this.createInstance(),this.initializationPromise)})}static createInstance(){return v(this,null,function*(){const t=performance.now();try{this.instance=y.getInstance(),yield this.instance.initialize();const e=performance.now()-t;return l.recordResponseTime("inventory_service_factory_creation",e,{service:"InventoryServiceFactory",operation:"createInstance"}),this.instance}catch(e){const n=performance.now()-t;throw l.recordErrorRate("inventory_service_factory",100,{service:"InventoryServiceFactory",operation:"createInstance",error:e instanceof Error?e.message:"Unknown error"}),console.error(`[InventoryServiceFactory] Failed to create instance after ${n.toFixed(2)}ms:`,e),e}finally{this.initializationPromise=null}})}static isReady(){var t,e;return(e=(t=this.instance)==null?void 0:t.isReady())!=null?e:!1}static reset(){this.instance=null,this.initializationPromise=null}}o.instance=null;o.initializationPromise=null;const P=()=>o.getInstance();export{o as InventoryServiceFactory,P as getInventoryService};
