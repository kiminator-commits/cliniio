import{ci as S,i as a,cj as r}from"./login-CtXU169Q.js";import"./utils-DSBVV_PW.js";import"./vendor-DoALFvsH.js";import"./data-73RVSc-N.js";import"./ui-DETUEJ2B.js";var g=Object.defineProperty,_=Object.defineProperties,w=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable,l=(o,t,e)=>t in o?g(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,p=(o,t)=>{for(var e in t||(t={}))y.call(t,e)&&l(o,e,t[e]);if(c)for(var e of c(t))I.call(t,e)&&l(o,e,t[e]);return o},v=(o,t)=>_(o,w(t)),i=(o,t,e)=>new Promise((f,d)=>{var m=n=>{try{s(e.next(n))}catch(u){d(u)}},h=n=>{try{s(e.throw(n))}catch(u){d(u)}},s=n=>n.done?f(n.value):Promise.resolve(n.value).then(m,h);s((e=e.apply(o,t)).next())});class E extends S{constructor(t={type:"static"}){const e={supportsRead:a()||!r(),supportsWrite:a()||!r(),supportsDelete:a()||!r(),supportsRealTime:!1,supportsOffline:a()||!r(),supportsBatch:!1};super(t,{name:"StaticDataAdapter",version:"1.0.0",description:"Static data adapter for development or when Supabase is not configured",capabilities:e})}initialize(){return i(this,null,function*(){if(!(a()||!r()))throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}isConnected(){return a()||!r()}fetchAllInventoryData(){return i(this,null,function*(){if(a()||!r())return{data:this.getMockInventoryItems(),error:null,count:this.getMockInventoryItems().length};throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}fetchInventoryItems(){return i(this,null,function*(){if(a()||!r())return this.getMockInventoryItems();throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}fetchCategories(){return i(this,null,function*(){if(a()||!r())return this.getMockCategories();throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}addInventoryItem(t){return i(this,null,function*(){if(a()||!r())return v(p({},t),{id:`mock-${Date.now()}`});throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}updateInventoryItem(t,e){return i(this,null,function*(){if(a()||!r())return p({id:t,name:"Mock Item"},e);throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}deleteInventoryItem(t){return i(this,null,function*(){if(!(a()||!r()))throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}addCategory(t){return i(this,null,function*(){if(a()||!r())return t;throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}deleteCategory(t){return i(this,null,function*(){if(!(a()||!r()))throw new Error("Static data adapter is disabled. This project should not use mock data. Please configure Supabase instead.")})}getMockInventoryItems(){return[{id:"mock-1",facility_id:"mock-facility",name:"Surgical Scissors",_category:"Surgical Instruments",location:"Operating Room 1",status:"Available",quantity:5,unit_cost:150,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),reorder_point:2,expiration_date:null,data:{lastUpdated:new Date().toISOString()}},{id:"mock-2",facility_id:"mock-facility",name:"Stethoscope",category:"Diagnostic Equipment",location:"Exam Room 2",status:"Available",quantity:3,unit_cost:75,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),reorder_point:1,expiration_date:null,data:{lastUpdated:new Date().toISOString()}},{id:"mock-3",facility_id:"mock-facility",name:"Blood Pressure Cuff",category:"Diagnostic Equipment",location:"Exam Room 1",status:"In Use",quantity:2,unit_cost:45,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),reorder_point:1,expiration_date:null,data:{lastUpdated:new Date().toISOString()}}]}getMockCategories(){return["Surgical Instruments","Diagnostic Equipment","Medical Supplies","Office Equipment","Emergency Equipment"]}}export{E as StaticDataAdapter};
