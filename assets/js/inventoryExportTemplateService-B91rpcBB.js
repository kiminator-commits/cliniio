var f=Object.defineProperty,b=Object.defineProperties,g=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,h=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable,y=(o,e,r)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r,c=(o,e)=>{for(var r in e||(e={}))h.call(e,r)&&y(o,r,e[r]);if(p)for(var r of p(e))v.call(e,r)&&y(o,r,e[r]);return o},m=(o,e)=>b(o,g(e)),u=(o,e,r)=>new Promise((s,t)=>{var a=i=>{try{n(r.next(i))}catch(d){t(d)}},l=i=>{try{n(r.throw(i))}catch(d){t(d)}},n=i=>i.done?s(i.value):Promise.resolve(i.value).then(a,l);n((r=r.apply(o,e)).next())});class S{static getTemplates(){return u(this,null,function*(){return[...this.DEFAULT_TEMPLATES]})}static getTemplateById(e){return u(this,null,function*(){return(yield this.getTemplates()).find(s=>s.id===e)||null})}static createTemplate(e){return u(this,null,function*(){const r=m(c({},e),{id:`template-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,createdAt:new Date,updatedAt:new Date});return this.DEFAULT_TEMPLATES.push(r),r})}static updateTemplate(e,r){return u(this,null,function*(){const s=yield this.getTemplateById(e);if(!s)return null;const t=m(c(c({},s),r),{updatedAt:new Date}),a=this.DEFAULT_TEMPLATES.findIndex(l=>l.id===e);return a!==-1&&(this.DEFAULT_TEMPLATES[a]=t),t})}static deleteTemplate(e){return u(this,null,function*(){const r=this.DEFAULT_TEMPLATES.findIndex(s=>s.id===e);return r===-1?!1:(this.DEFAULT_TEMPLATES.splice(r,1),!0)})}static applyTemplate(e,r){const s=r.fields.sort((a,l)=>a.order-l.order);let t=e;return r.filters&&r.filters.length>0&&(t=this.applyFilters(e,r.filters)),t.map(a=>{const l={};for(const n of s){const i=a[n.key];n.transform?l[n.label]=n.transform(i):l[n.label]=this.formatValue(i,n.type,r.dateFormat)}return l})}static applyFilters(e,r){return e.filter(s=>r.every(t=>{const a=s[t.field];switch(t.operator){case"equals":return a===t.value;case"contains":return String(a).toLowerCase().includes(String(t.value).toLowerCase());case"startsWith":return String(a).toLowerCase().startsWith(String(t.value).toLowerCase());case"endsWith":return String(a).toLowerCase().endsWith(String(t.value).toLowerCase());case"greaterThan":return Number(a)>Number(t.value);case"lessThan":return Number(a)<Number(t.value);case"between":return Number(a)>=Number(t.value)&&Number(a)<=Number(t.value2);case"in":return Array.isArray(t.value)&&t.value.includes(a);case"notIn":return Array.isArray(t.value)&&!t.value.includes(a);default:return!0}}))}static formatValue(e,r,s){if(e==null)return"";switch(r){case"date":return e instanceof Date?this.formatDate(e,s):e;case"number":return Number(e);case"boolean":return!!e;case"object":return JSON.stringify(e);default:return String(e)}}static formatDate(e,r){const s=e.getFullYear(),t=String(e.getMonth()+1).padStart(2,"0"),a=String(e.getDate()).padStart(2,"0"),l=String(e.getHours()).padStart(2,"0"),n=String(e.getMinutes()).padStart(2,"0"),i=String(e.getSeconds()).padStart(2,"0"),d=String(e.getMilliseconds()).padStart(3,"0");return r.replace("YYYY",String(s)).replace("MM",t).replace("DD",a).replace("HH",l).replace("mm",n).replace("ss",i).replace("SSS",d)}static generateFileName(e){const r=new Date,s=this.formatDate(r,"YYYY-MM-DD"),t=this.formatDate(r,"HH-mm-ss");return e.fileNamePattern.replace("{date}",s).replace("{time}",t).replace("{timestamp}",`${s}_${t}`)}static validateTemplate(e){var r,s;const t=[];if((r=e.name)!=null&&r.trim()||t.push("Template name is required"),(!e.format||!["csv","json","excel"].includes(e.format))&&t.push("Invalid format. Must be csv, json, or excel."),(!e.fields||e.fields.length===0)&&t.push("At least one field is required"),(s=e.fileNamePattern)!=null&&s.trim()||t.push("File name pattern is required"),e.fields){const a=e.fields.map(n=>n.key),l=a.filter((n,i)=>a.indexOf(n)!==i);l.length>0&&t.push(`Duplicate field keys: ${l.join(", ")}`),e.fields.forEach((n,i)=>{var d;n.key||t.push(`Field ${i+1}: Key is required`),(d=n.label)!=null&&d.trim()||t.push(`Field ${i+1}: Label is required`),(n.order===void 0||n.order<0)&&t.push(`Field ${i+1}: Order must be a non-negative number`)})}return{isValid:t.length===0,errors:t}}}S.DEFAULT_TEMPLATES=[{id:"basic-csv",name:"Basic CSV Export",description:"Standard CSV export with essential fields",format:"csv",fields:[{key:"id",label:"ID",type:"string",required:!0,order:1},{key:"name",label:"Item Name",type:"string",required:!0,order:2},{key:"category",label:"Category",type:"string",required:!0,order:3},{key:"location",label:"Location",type:"string",required:!0,order:4},{key:"status",label:"Status",type:"string",required:!0,order:5},{key:"quantity",label:"Quantity",type:"number",required:!0,order:6},{key:"cost",label:"Cost",type:"number",required:!0,order:7},{key:"vendor",label:"Vendor",type:"string",required:!1,order:8},{key:"purchaseDate",label:"Purchase Date",type:"date",required:!1,order:9},{key:"lastUpdated",label:"Last Updated",type:"date",required:!1,order:10}],includeHeaders:!0,dateFormat:"YYYY-MM-DD",fileNamePattern:"inventory_export_{date}.csv",isDefault:!0,createdAt:new Date,updatedAt:new Date},{id:"detailed-json",name:"Detailed JSON Export",description:"Complete inventory data in JSON format",format:"json",fields:[{key:"id",label:"ID",type:"string",required:!0,order:1},{key:"name",label:"Item Name",type:"string",required:!0,order:2},{key:"category",label:"Category",type:"string",required:!0,order:3},{key:"location",label:"Location",type:"string",required:!0,order:4},{key:"status",label:"Status",type:"string",required:!0,order:5},{key:"quantity",label:"Quantity",type:"number",required:!0,order:6},{key:"cost",label:"Cost",type:"number",required:!0,order:7},{key:"vendor",label:"Vendor",type:"string",required:!1,order:8},{key:"purchaseDate",label:"Purchase Date",type:"date",required:!1,order:9},{key:"warranty",label:"Warranty",type:"string",required:!1,order:10},{key:"maintenanceSchedule",label:"Maintenance Schedule",type:"string",required:!1,order:11},{key:"lastServiced",label:"Last Serviced",type:"date",required:!1,order:12},{key:"nextDue",label:"Next Due",type:"date",required:!1,order:13},{key:"serviceProvider",label:"Service Provider",type:"string",required:!1,order:14},{key:"assignedTo",label:"Assigned To",type:"string",required:!1,order:15},{key:"notes",label:"Notes",type:"string",required:!1,order:16},{key:"lastUpdated",label:"Last Updated",type:"date",required:!1,order:17}],includeHeaders:!1,dateFormat:"YYYY-MM-DDTHH:mm:ss.SSSZ",fileNamePattern:"inventory_detailed_{date}.json",createdAt:new Date,updatedAt:new Date},{id:"low-stock-alert",name:"Low Stock Alert",description:"Export items with low quantity for reordering",format:"csv",fields:[{key:"id",label:"ID",type:"string",required:!0,order:1},{key:"name",label:"Item Name",type:"string",required:!0,order:2},{key:"category",label:"Category",type:"string",required:!0,order:3},{key:"location",label:"Location",type:"string",required:!0,order:4},{key:"quantity",label:"Current Quantity",type:"number",required:!0,order:5},{key:"vendor",label:"Vendor",type:"string",required:!1,order:6},{key:"cost",label:"Unit Cost",type:"number",required:!0,order:7}],filters:[{field:"quantity",operator:"lessThan",value:10},{field:"status",operator:"equals",value:"active"}],includeHeaders:!0,dateFormat:"YYYY-MM-DD",fileNamePattern:"low_stock_alert_{date}.csv",createdAt:new Date,updatedAt:new Date}];export{S as InventoryExportTemplateService};
