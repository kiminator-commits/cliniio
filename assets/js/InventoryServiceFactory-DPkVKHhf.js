import{O as y,Q as l}from"./main-Ccza29P3.js";import"./utils-5cl0BHpv.js";import"./vendor-DVtBqAv5.js";import"./login-CgiYf71G.js";import"./data-Djiu4445.js";import"./ui-C2vLYFVP.js";import"./errors-BMV5cHgT.js";var v=(s,e,t)=>new Promise((n,c)=>{var m=i=>{try{r(t.next(i))}catch(a){c(a)}},u=i=>{try{r(t.throw(i))}catch(a){c(a)}},r=i=>i.done?n(i.value):Promise.resolve(i.value).then(m,u);r((t=t.apply(s,e)).next())});class o{static getInstance(){return v(this,null,function*(){return this.instance?this.instance:this.initializationPromise?this.initializationPromise:(this.initializationPromise=this.createInstance(),this.initializationPromise)})}static createInstance(){return v(this,null,function*(){const e=performance.now();try{this.instance=y.getInstance(),yield this.instance.initialize();const t=performance.now()-e;return l.recordResponseTime("inventory_service_factory_creation",t,{service:"InventoryServiceFactory",operation:"createInstance"}),this.instance}catch(t){const n=performance.now()-e;throw l.recordErrorRate("inventory_service_factory",100,{service:"InventoryServiceFactory",operation:"createInstance",error:t instanceof Error?t.message:"Unknown error"}),console.error(`[InventoryServiceFactory] Failed to create instance after ${n.toFixed(2)}ms:`,t),t}finally{this.initializationPromise=null}})}static isReady(){var e,t;return(t=(e=this.instance)==null?void 0:e.isReady())!=null?t:!1}static reset(){this.instance=null,this.initializationPromise=null}}o.instance=null;o.initializationPromise=null;const z=()=>o.getInstance();export{o as InventoryServiceFactory,z as getInventoryService};
