import{s as u}from"./login-em2Hs6UG.js";import{b as d}from"./main-FsBT3Y_8.js";import"./utils-DSBVV_PW.js";import"./vendor-DoALFvsH.js";import"./data-73RVSc-N.js";import"./ui-CbhfWbfq.js";import"./errors-CsB9ZK3e.js";var l=(y,e,t)=>new Promise((r,o)=>{var i=s=>{try{c(t.next(s))}catch(n){o(n)}},a=s=>{try{c(t.throw(s))}catch(n){o(n)}},c=s=>s.done?r(s.value):Promise.resolve(s.value).then(i,a);c((t=t.apply(y,e)).next())});class h{getCachedUser(){return null}getSterilizationMetrics(){return l(this,null,function*(){try{const e=yield this.getCachedUser();return e?yield this.getConsolidatedSterilizationMetrics(e.facility_id):this.getDefaultSterilizationMetrics()}catch(e){return console.error("Error fetching sterilization metrics:",e),this.getDefaultSterilizationMetrics()}})}getConsolidatedSterilizationMetrics(e){return l(this,null,function*(){const t=new Date().toISOString().split("T")[0],r=new Date;r.setDate(r.getDate()-7);const o=new Date;o.setDate(o.getDate()-30);const{data:i,error:a}=yield u.from("sterilization_cycles").select("id, status, created_at, end_time").eq("facility_id",e).gte("created_at",o.toISOString()).lte("created_at",t).order("created_at",{ascending:!1});return a?(console.error("Error fetching consolidated sterilization metrics:",a),yield this.getFallbackSterilizationMetrics(e)):i&&Array.isArray(i)&&i.length>0?this.mapDatabaseResponseToMetrics(i[0]):this.getDefaultSterilizationMetrics()})}mapDatabaseResponseToMetrics(e){return{cyclesToday:e.cycles_today||0,cyclesThisWeek:e.cycles_this_week||0,biPassRate:e.bi_pass_rate||0,averageCycleTime:e.average_cycle_time||0,toolsInCycle:e.tools_in_cycle||0,toolsCompletedToday:e.tools_completed_today||0,performanceScore:e.performance_score||0}}getFallbackSterilizationMetrics(e){return l(this,null,function*(){const[t,r,o,i,a,c]=yield Promise.all([this.getCyclesToday(e),this.getCyclesThisWeek(e),this.getBITestResults(e),this.getCycleTimes(e),this.getToolsInCycle(e),this.getToolsCompletedToday(e)]),s=this.calculateBIPassRate(o),n=this.calculateAverageCycleTime(i),g=this.calculatePerformanceScore({biPassRate:s,averageCycleTime:n,cyclesToday:t});return{cyclesToday:t,cyclesThisWeek:r,biPassRate:s,averageCycleTime:n,toolsInCycle:a,toolsCompletedToday:c,performanceScore:g}})}getCyclesToday(e){return l(this,null,function*(){const{data:t,error:r}=yield u.from("sterilization_cycles").select("id").eq("facility_id",e).gte("created_at",new Date().toISOString().split("T")[0]);return r?(console.error("Error fetching cycles today:",r),0):(t==null?void 0:t.length)||0})}getCyclesThisWeek(e){return l(this,null,function*(){const t=new Date;t.setDate(t.getDate()-7);const{data:r,error:o}=yield u.from("sterilization_cycles").select("id").eq("facility_id",e).gte("created_at",t.toISOString());return o?(console.error("Error fetching cycles this week:",o),0):(r==null?void 0:r.length)||0})}getBITestResults(e){return l(this,null,function*(){const{data:t,error:r}=yield u.from("bi_test_results").select("result").eq("facility_id",e).gte("created_at",new Date(Date.now()-2592e6).toISOString());return r?(console.error("Error fetching BI test results:",r),[]):t||[]})}getCycleTimes(e){return l(this,null,function*(){const{data:t,error:r}=yield u.from("sterilization_cycles").select("start_time, end_time, duration_minutes").eq("facility_id",e).eq("status","completed").gte("created_at",new Date(Date.now()-6048e5).toISOString());return r?(console.error("Error fetching cycle times:",r),[]):t||[]})}getToolsInCycle(e){return l(this,null,function*(){try{return(yield d.getToolsByFacilityAndStatus(e,"in_cycle")).length}catch(t){return console.error("Error fetching tools in cycle:",t),0}})}getToolsCompletedToday(e){return l(this,null,function*(){try{const t=yield d.getToolsByFacilityAndStatus(e,"available"),r=new Date().toISOString().split("T")[0];return t.filter(i=>i.updated_at&&i.updated_at.split("T")[0]>=r).length}catch(t){return console.error("Error fetching tools completed today:",t),0}})}calculateBIPassRate(e){if(e.length===0)return 0;const t=e.filter(r=>r.result==="pass").length;return Math.round(t/e.length*100)}calculateAverageCycleTime(e){if(e.length===0)return 0;const t=e.reduce((r,o)=>r+(o.duration_minutes||0),0);return Math.round(t/e.length)}calculatePerformanceScore(e){const t=Math.min(e.biPassRate,100),r=Math.min(e.cyclesToday*10,50),o=Math.max(0,50-e.averageCycleTime);return Math.round((t+r+o)/3)}getDefaultSterilizationMetrics(){return{cyclesToday:0,cyclesThisWeek:0,biPassRate:0,averageCycleTime:0,toolsInCycle:0,toolsCompletedToday:0,performanceScore:0}}}const D=new h;export{D as homeSterilizationIntegration};
